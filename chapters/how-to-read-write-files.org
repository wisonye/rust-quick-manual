* How to read from and write to file

Read from file (get back ~Vec<u8>~): ~fn read<P: AsRef<Path>>(path: P) -> Result<Vec<u8>>~

Write (~[u8]~) to file: ~fn write<P: AsRef<Path>, C: AsRef<[u8]>>(path: P, contents: C) -> Result<()>~


#+BEGIN_SRC rust
  ///
  ///
  ///
  fn read_string_from_file(filename: &str) -> String {
      let read_result = std::fs::read(filename);
      if read_result.is_err() {
          println!(
              ">>> [ read_string_from_file ] - error: {}",
              read_result.err().unwrap().to_string()
          );

          return "".to_string();
      }

      let bytes = read_result.unwrap();
      if bytes.len() <= 0 {
          return "".to_string();
      }

      let string_content = String::from_utf8(bytes).unwrap();

      println!(">>> [ read_string_from_file ] - string_content: {string_content}");

      string_content
  }

  ///
  ///
  ///
  fn write_string_to_file(content: &str, filename: &str) {
      if content.len() <= 0 {
          return;
      }

      match std::fs::write(filename, content) {
          Ok(_) => {
              println!(">>> [ wirte_string_to_file ] - Write successfully.");
          },
          Err(e) =>{
              println!(">>> [ wirte_string_to_file ] - error: {}", e.to_string());
          }
      }
  }

  ///
  ///
  ///
  fn main() {
      let _ = read_string_from_file("/home/wison/temp/test.txt");
      write_string_to_file("hello:)", "/home/wison/temp/test.txt");
  }
#+END_SRC

